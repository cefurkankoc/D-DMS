// SPDX-License-Identifier: MIT

pragma solidity ^0.6.0;

contract SimpleStorage {

    // this will get initialized to 0!
    uint256 favoriteNumber;
    
    struct People {
        uint256 favoriteNumber;
        string name;
    }
    // For 1 person:
    // People public person = People({favoriteNumber: 2, name: "Furkan"});

    People[] public people;
    mapping(string => uint256) public nameToFavoriteNumber;


    // store numbers
    function store(uint256 _favoriteNumber) public{
    favoriteNumber = _favoriteNumber;
    }

    // view, pure. view reads state of the blockchain. no state change, no transaction
    function retrieve() public view returns(uint256) {
        return favoriteNumber;
    }

    function addPerson(string memory _name, uint256 _favoriteNumber) public {
        people.push(People(_favoriteNumber, _name));
        nameToFavoriteNumber[_name] = _favoriteNumber;
    }
}
